networks:
  gg-network:
    driver: bridge

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    networks:
      - gg-network
    hostname: frontend
    volumes:
      - ./Frontend:/app
      - gg-node-modules:/app/node_modules
    environment:
      - NODE_ENV=development

  nginx:
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    container_name: gg-nginx
    restart: unless-stopped
    networks:
      - gg-network
    ports:
      - "80:80"
    depends_on:
      - frontend
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  postgres:
    image: postgres:17.4-alpine
    container_name: gg-postgres
    restart: unless-stopped
    user: postgres:postgres
    networks:
      - gg-network
    env_file:
      - ./Postgres/db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Postgres/init:/docker-entrypoint-initdb.d

  db:
    build:
      context: ./DB
      dockerfile: Dockerfile
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    container_name: gg-db
    restart: unless-stopped
    networks:
      - gg-network
    hostname: db
    depends_on:
      - postgres
    env_file:
      - ./.env

  dev:
    build:
      context: ./.devcontainer
      dockerfile: Dockerfile
    container_name: gg-dev
    volumes:
      - .:/workspace:cached
      - ~/.ssh:/home/vscode/.ssh:cached
      - /var/run/docker.sock:/var/run/docker.sock
    command: sleep infinity
    networks:
      - gg-network
    environment:
      - GOPATH=/go
    depends_on:
      - postgres
      - db
      - frontend
      - nginx

volumes:
  postgres_data:
    name: gg-postgres-data
  gg-node-modules:
    name: frontend-node-modules
